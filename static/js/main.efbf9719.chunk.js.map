{"version":3,"sources":["components/searchBar.js","components/video_list_item.js","components/video_list.js","components/video_detail.js","Youtubeapi/commentapi.js","components/singleComment.js","components/videoComments.js","components/App.js","serviceWorker.js","index.js","Youtubeapi/searchapi.js"],"names":["options","key","text","value","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_ref","setState","OnChannelChanged","state","term","channelId","link","visible","activeItem","loogedin","onSearchTermChanged","console","log","_this2","react_default","a","createElement","Menu","stackable","borderless","style","marginBottom","Container","Item","src","alt","width","height","Input","onChange","event","onInputhange","target","icon","Icon","name","background","color","circular","placeholder","position","Dropdown","item","simple","closeOnChange","defaultValue","as","Link","to","linkname","active","onClick","Component","VideoListItem","video","onVideoSelect","imageurl","snippet","thumbnails","default","url","title","className","cursor","VideoList","videoItems","videos","map","video_list_item","etag","VideoDetail","Placeholder","maxWidth","margin","Image","videoId","id","concat","description","axios","require","VideoComments","callback","Error","params","part","get","then","response","data","items","catch","error","CommentItem","comment","displayName","topLevelComment","authorDisplayName","ProfileImage","authorProfileImageUrl","commentdisplay","textDisplay","publishedAt","Comment","Group","Avatar","Content","Author","Metadata","Text","Actions","Action","VideoComment","videocomments","Comments","Video","videocommentslist","singleComment","API_KEY","App","handleContextRef","contextRef","selectedVideo","searchRef","VideoSearch","YTSearch","_this3","_this4","Search","_","debounce","BrowserRouter","searchBar","channel","VideoChannel","marginTop","Responsive","minWidth","video_detail","videoComments","video_list","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","q","type"],"mappings":"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","file":"static/js/main.efbf9719.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Menu, Container, Icon, Input, Dropdown} from 'semantic-ui-react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n// const channels = [\r\n//     {\r\n//         channelName:'Channel One',\r\n//         channelId:'UC2oFur5gQiz6FWXHpWpkokg',\r\n//         icon:'globe',\r\n//         id:1\r\n//     },\r\n//     {\r\n//         channelName:'Arsenal Video HD',\r\n//         channelId:'UCXNPFRJgdTzA7SQF6rlHBOg',\r\n//         icon:'computer',\r\n//         id:2\r\n//     }\r\n// ]\r\nconst options = [\r\n  { key: 'UCOhrz3uRCOHmK6ueUstw7_Q', text: 'EBC Zena', value: 'UCOhrz3uRCOHmK6ueUstw7_Q' },\r\n  { key: 'UCZtXd8pSeqURf5MT2fqE51g', text: 'Fana BC', value: 'UCZtXd8pSeqURf5MT2fqE51g' },\r\n  { key: 'UCKmDyLU_IH0wrtxHPK5xWlA', text: 'Ltv World', value: 'UCKmDyLU_IH0wrtxHPK5xWlA' },\r\n  { key: 'UCvgODwKEq2GS7zxacxvYa6Q', text: 'Kana Tv', value: 'UCvgODwKEq2GS7zxacxvYa6Q' },\r\n]\r\n// Class based component\r\nclass SearchBar extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            term: '',\r\n            channelId:'',\r\n            options:options\r\n            ,link:''\r\n            ,visible:true,\r\n            activeItem:'',\r\n            loogedin:true\r\n        }\r\n    }\r\n\r\n    onInputhange(term){\r\n        this.setState({term});\r\n        this.props.onSearchTermChanged(term);\r\n        console.log(term);\r\n    }\r\n    handleChange = (e, {value}) => {this.setState({ value });this.props.OnChannelChanged(value)}\r\n    //state = { link:'',visible:true,activeItem:''};\r\n\r\n    ///handleItemClick = (e, {linkname}) => {this.setState({activeItem: linkname})};\r\n\r\n    render(){\r\n        \r\n        const {activeItem} = this.state;\r\n        const { value } = this.state;\r\n        const Imagurl = 'https://images.vexels.com/media/users/3/137425/isolated/preview/f2ea1ded4d037633f687ee389a571086-youtube-icon-logo-by-vexels.png';\r\n        return(\r\n            <div>\r\n            <Menu stackable borderless style={{marginBottom:'0px'}} >\r\n                <Container >\r\n                    <Menu.Item>\r\n                        <img src={Imagurl} alt=\"logo\" style={{width:'40px',height:'40px'}} />\r\n                    </Menu.Item>\r\n                    \r\n                    <Menu.Item>\r\n                        \r\n                        <Input \r\n                            value = {this.state.term}\r\n                            onChange={(event) => {\r\n                                this.onInputhange(event.target.value);\r\n                            }\r\n                            }\r\n                            icon={<Icon name='search' style={{background:'red',color:'white'}} circular link />}  placeholder='Search for Video' style={{width:'450px'}} />\r\n                    </Menu.Item>\r\n                    \r\n                    <Menu.Menu position='right'>\r\n                        {/* <Dropdown item simple text='Catagory'>\r\n                            <Dropdown.Menu>\r\n                                {\r\n                                    channels.map((channel) => \r\n                                        <Dropdown.Item key={channel.id} icon={channel.icon} text={channel.channelName}  />\r\n                                    )\r\n                                }\r\n                            </Dropdown.Menu>\r\n                        </Dropdown> */}\r\n                        \r\n                        <Dropdown\r\n                            onChange={this.handleChange}\r\n                            options={this.state.options}\r\n                            placeholder='Choose an option'\r\n                            item\r\n                            simple\r\n                            value={value}\r\n                            closeOnChange\r\n                            defaultValue='UCOhrz3uRCOHmK6ueUstw7_Q'\r\n                            \r\n                        />\r\n                        <Menu.Item  as={ Link } to=\"/dashboard\"\r\n                            linkname='Dashboard'\r\n                            active={activeItem === 'Dashboard'}\r\n                            onClick={()=>{this.setState({loogedin:!this.state.loogedin})}}>\r\n                            {\r\n                                this.state.loogedin?<div><Icon name='log out' /> Logout</div>:<div><Icon name='google plus' /> Login</div>\r\n                            }\r\n                        </Menu.Item>\r\n                    </Menu.Menu>\r\n                    \r\n                </Container>\r\n            </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n\r\n// events\r\n// State\r\n//only class based components has state\r\n//functional component\r\n// const SearchBar = ()=> {\r\n//     return(\r\n//         <input />\r\n//     );\r\n// } \r\n// controlled component form element which will be set by the state element\r\n// ","import React from 'react';\r\n\r\nconst VideoListItem = ({video,onVideoSelect}) =>{\r\n    const imageurl = video.snippet.thumbnails.default.url;\r\n    const title = video.snippet.title;\r\n\r\n    return(\r\n        <li onClick={()=> onVideoSelect(video)} className=\"list-group-item\" style={{cursor:'pointer'}}>\r\n            <div className=\"video-list media\">\r\n                <div className=\"media-left\">\r\n                    <img className=\"media-object\" src={imageurl} />\r\n                </div>\r\n                <div className=\"media-body\">\r\n                    <div className=\"media-heading\">{title}</div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default VideoListItem;","import React from 'react';\r\nimport VideoListItem from './video_list_item';\r\n//import Footer from './footer';\r\n\r\nconst VideoList = (props) => {\r\n    const videos = props.videos;\r\n    //const previousPage = videos.prevPageToken;\r\n    //const nextPage = videos.nextPageToken;\r\n    const videoItems = videos.map((video) =>{\r\n        return(\r\n            <VideoListItem \r\n                onVideoSelect = {props.onVideoSelect}\r\n                key={video.etag} \r\n                video={video} \r\n            />\r\n        )\r\n    })\r\n    // building list with map\r\n    return(\r\n        <div>\r\n        <ul >\r\n            { videoItems }\r\n            \r\n            {/* <Footer /> */}\r\n        </ul>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoList;","import React,{ Component } from 'react';\r\nimport { Placeholder } from 'semantic-ui-react';\r\n\r\n     \r\nclass VideoDetail extends Component{\r\n\r\n    \r\n\r\n    render(){\r\n        const video = this.props.video;\r\n            if(!video){\r\n                return(\r\n                        <div className='col-md-8' >\r\n                                <Placeholder style={{maxWidth:'100%',margin:'auto'}}>\r\n                                    <Placeholder.Image  />\r\n                                </Placeholder>\r\n                        </div>\r\n                )\r\n            }\r\n            const videoId = video.id.videoId;\r\n            \r\n            const url = `https://www.youtube.com/embed/${videoId}`;\r\n            \r\n            \r\n        \r\n            return(\r\n                <div style={{maxWidth:'70%',margin:'auto',marginBottom:'20px'}}>\r\n                    <div className=\"embed-responsive embed-responsive-16by9\" >\r\n                        <iframe className=\"embed-responsive-item\" src={url}>\r\n                        </iframe>\r\n                    </div>\r\n                    <div className=\"details\">\r\n                        <div>{video.snippet.title}</div>\r\n                        <div>{video.snippet.description}</div>\r\n                    </div>\r\n                    </div>\r\n                \r\n            );\r\n        }\r\n}\r\n\r\nexport default VideoDetail;","var axios = require('axios');\r\n\r\nvar ROOT_URL = 'https://www.googleapis.com/youtube/v3/commentThreads';\r\n\r\nconst VideoComments = ( (options, callback) => {\r\n  if (!options.key) {\r\n    throw new Error('Youtube Comment Could not be displayed');\r\n  }\r\n\r\n  var params = {\r\n    part: 'snippet',\r\n    key: options.key,\r\n    videoId: options.etag.videoId,\r\n  };\r\n\r\n  axios.get(ROOT_URL, { params: params })\r\n    .then(function(response) {\r\n      if (callback) { callback(response.data.items);}\r\n    })\r\n    .catch(function(error) {\r\n      console.error(error);\r\n    });\r\n});\r\n\r\nexport default VideoComments;\r\n/*\r\n  var params = {\r\n    part: 'snippet',\r\n    key: options.key,\r\n    q: options.term,\r\n    order:'viewCount',\r\n    pageToken: options.pageToken,\r\n    channelId:options.channelId,\r\n    type: 'video'\r\n  };\r\n\r\n*/\r\n","import React from 'react';\r\n\r\nimport { Comment } from 'semantic-ui-react';\r\n\r\nconst CommentItem = (({comment}) => {\r\n    const displayName = comment.snippet.topLevelComment.snippet.authorDisplayName;\r\n    const ProfileImage = comment.snippet.topLevelComment.snippet.authorProfileImageUrl;\r\n    const commentdisplay = comment.snippet.topLevelComment.snippet.textDisplay;\r\n    const publishedAt = comment.snippet.topLevelComment.snippet.publishedAt;\r\n\r\n\r\n    return(\r\n        <div>\r\n        <Comment.Group>\r\n            <Comment>\r\n            <Comment.Avatar src={ProfileImage} />\r\n            <Comment.Content>\r\n                <Comment.Author as='a'>{displayName}</Comment.Author>\r\n                <Comment.Metadata>\r\n                <div>{publishedAt}</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text>{commentdisplay}</Comment.Text>\r\n                <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n                </Comment.Actions>\r\n            </Comment.Content>\r\n            </Comment>\r\n            </Comment.Group>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default CommentItem;","import React, {Component} from 'react';\r\nimport Comments from '../Youtubeapi/commentapi';\r\nimport CommentItem from './singleComment';\r\n\r\nconst API_KEY = \"AIzaSyCqDhBN-4PQlL2Jha1BlBcp-eebx8PaRbU\";//Youtube Api Key\r\n\r\nclass VideoComment extends Component{\r\n\r\n    state = {\r\n        videocomments: []\r\n    };\r\n\r\n    VideoComment(etag){\r\n        Comments({key: API_KEY,etag:etag},(Comment) =>{\r\n        this.setState({\r\n            videocomments: Comment\r\n        })\r\n    });\r\n    }\r\n    \r\n\r\n    render(){\r\n            const Video = this.props.Video;\r\n\r\n            if(!this.props.Video){\r\n                return <div>Loading</div>\r\n            }\r\n            \r\n            const id = Video.id;\r\n            const comments = this.state.videocomments;\r\n            const videocommentslist = comments.map((comment) => \r\n                    {\r\n                        return(\r\n                                <CommentItem comment={comment}\r\n                                key={comment.etag} />\r\n                        )\r\n                    }\r\n            )\r\n            this.VideoComment(id);\r\n            return(\r\n                <div style={{maxWidth:'70%',margin:'auto',}}>\r\n                    {videocommentslist}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default VideoComment;","import React, {Component} from 'react';\r\n//import SearchBar from './SearchBar';\r\nimport {Advertisement, Responsive, Sticky } from 'semantic-ui-react';\r\n\r\nimport { BrowserRouter} from 'react-router-dom';\r\nimport _ from 'lodash';\r\n\r\nimport YTSearch from '../Youtubeapi/searchapi';\r\n\r\nimport SearchBar from './searchBar';\r\nimport VideoList from './video_list';\r\nimport VideoDetail from './video_detail';\r\nimport VideoComment from './videoComments';\r\n\r\nconst API_KEY = \"AIzaSyCqDhBN-4PQlL2Jha1BlBcp-eebx8PaRbU\";//Youtube Api Key\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { \r\n            videos: [],\r\n            selectedVideo: null,\r\n            contextRef:'',\r\n            searchRef:'',\r\n            channelId:'UCOhrz3uRCOHmK6ueUstw7_Q'\r\n         };\r\n         this.VideoSearch('');\r\n\r\n    }\r\n\r\n    VideoSearch(term){\r\n        YTSearch({key: API_KEY,term: term,channelId:this.state.channelId},(videos) =>{\r\n        this.setState({ \r\n            videos: videos,\r\n            selectedVideo: videos[0]\r\n         });\r\n    });\r\n    }\r\n\r\n    VideoChannel(channelId){\r\n        YTSearch({key: API_KEY,term:'',channelId:channelId},(videos) =>{\r\n            this.setState({ \r\n                videos: videos,\r\n                selectedVideo: videos[0],\r\n                channelId: channelId\r\n             });\r\n        });\r\n    }\r\n    handleContextRef = contextRef => this.setState({ contextRef });\r\n    \r\n\r\n    render(){\r\n        const Search = _.debounce((term) => {this.VideoSearch(term)},300);\r\n        const { contextRef } = this.state;\r\n        //{(term)=>{this.VideoSearch(term)}}\r\n        return(\r\n            <div>\r\n                <BrowserRouter>\r\n                <div>\r\n                <SearchBar onSearchTermChanged = {Search} OnChannelChanged={(channel)=>{this.VideoChannel(channel);}} />\r\n                <div style={{marginTop:'20px'}}>\r\n                <Responsive minWidth={768} >\r\n                </Responsive>\r\n                    <div>\r\n                <div className='row'>\r\n                     <div className=\"video-detail col-md-7\" >\r\n                            <div className='col-md-4'>\r\n                                <div className='row'>\r\n                                    <div className='col-md-3'></div>\r\n                                    <div className='col-md-7'>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-md-8' >\r\n                                <div className='row'>\r\n                                    <VideoDetail  video={this.state.selectedVideo} />\r\n                                </div>\r\n                                <div className='row' >\r\n                                    <VideoComment Video={this.state.selectedVideo} />\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                     <div className='col-md-3 list-group'>\r\n                        <VideoList \r\n                            videos={this.state.videos} \r\n                            onVideoSelect = { selectedVideo => this.setState({selectedVideo})}\r\n                        />\r\n                     </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n//const API_KEY = \"AIzaSyCqDhBN-4PQlL2Jha1BlBcp-eebx8PaRbU\";//Youtube Api Key\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var axios = require('axios');\r\n\r\nvar ROOT_URL = 'https://www.googleapis.com/youtube/v3/search';\r\n\r\nmodule.exports = function (options, callback) {\r\n  if (!options.key) {\r\n    throw new Error('Youtube Search expected key, received undefined');\r\n  }\r\n\r\n  var params = {\r\n    part: 'snippet',\r\n    key: options.key,\r\n    q: options.term,\r\n    channelId:options.channelId,\r\n    type: 'video'\r\n  };\r\n\r\n  axios.get(ROOT_URL, { params: params })\r\n    .then(function(response) {\r\n      if (callback) { callback(response.data.items);}\r\n    })\r\n    .catch(function(error) {\r\n      console.error(error);\r\n    });\r\n};\r\n/*\r\n  var params = {\r\n    part: 'snippet',\r\n    key: options.key,\r\n    q: options.term,\r\n    order:'viewCount',\r\n    pageToken: options.pageToken,\r\n    channelId:options.channelId,\r\n    type: 'video'\r\n  };\r\n\r\n*/\r\n"],"sourceRoot":""}